#pragma checksum "C:\Users\t-xinma\source\repos\SSLTLSWeb\Views\Home\algorithm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "833835cd9257193e53685184f8cc9bfd7b28f4a6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_algorithm), @"mvc.1.0.view", @"/Views/Home/algorithm.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/algorithm.cshtml", typeof(AspNetCore.Views_Home_algorithm))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\t-xinma\source\repos\SSLTLSWeb\Views\_ViewImports.cshtml"
using SSLTLSWeb;

#line default
#line hidden
#line 2 "C:\Users\t-xinma\source\repos\SSLTLSWeb\Views\_ViewImports.cshtml"
using SSLTLSWeb.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"833835cd9257193e53685184f8cc9bfd7b28f4a6", @"/Views/Home/algorithm.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"21148e7936e0be25ff36149f596c27e0e342f215", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_algorithm : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(130, 17231, true);
            WriteLiteral(@"
<h3 style=""text-align:center""><strong>Algorithms supported</strong></h3>

<style>
    table {
        text-align: center;
    }

    
    #Al {
        font-size: 14px;
        font-weight: bold; /*字体粗细*/
        background-color: #E1FCE0;
        color: black;
    }

</style>


<h4><strong>TLS 1.0</strong></h4>
<table border=""1"" style=""margin:auto;width:100%"">
    <tr>
        <th colspan=""2"" style=""text-align:center;width:33%"">Key Exchange</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Encrypted Cipher</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Integrity Assurance</th>
    </tr>

    <tr>
        <td style=""width:23%"">RSA</td>
        <td style=""width:10%"">&radic;</td>
        <td style=""width:23%"">AES GCM</td>
        <td style=""width:10%"">&nbsp;</td>
        <td style=""width:23%"">HMAC-MD5</td>
        <td style=""width:10%"">&radic;</td>
    </tr>
    <tr>
        <td>DH-RSA</td>
        <td>&radic;</td>
        <td>AES CCM</td>");
            WriteLiteral(@"
        <td>&nbsp;</td>
        <td>HMAC-SHA1</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DHE-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>AES CBC</td>
        <td>&nbsp;</td>
        <td>HMAC-SHA256/384</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-RSA</td>
        <td>&radic;</td>
        <td>Camellia GCM</td>
        <td>&nbsp;</td>
        <td>AEAD</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>Camellia CBC</td>
        <td>&nbsp;</td>
        <td>GOST 28147-89 IMIT</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DH-DSS</td>
        <td>&radic;</td>
        <td>ARIA GCM</td>
        <td>&nbsp;</td>
        <td>GOST R34.11-94</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DHE-DSS(forward secrecy)</td>
        <td>&radic;</td>
        <td>ARIA CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      ");
            WriteLiteral(@"  <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ECDSA</td>
        <td>&radic;</td>
        <td>SEED CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-ECDSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>3DES EDE CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK</td>
        <td>&radic;</td>
        <td>GOST 28147-89 CNT</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK-RSA</td>
        <td>&radic;</td>
        <td>IDEA CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DHE-PSK(forward secrecy)</td>
        <td>&radic;</td>
        <td>DES CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-PS");
            WriteLiteral(@"K(forward secrecy)</td>
        <td>&radic;</td>
        <td>RC2 CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP</td>
        <td>&radic;</td>
        <td>ChaCha20-Poly1305</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-DSS</td>
        <td>&radic;</td>
        <td>RC4</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-RSA</td>
        <td>&radic;</td>
        <td><i>null</i></td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>Kerberos</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DH-ANON(insecure)</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
       ");
            WriteLiteral(@" <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ANON(insecure)</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>GOSTR 34.10-94/34.10-2001</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
</table>

<br />
<h4><strong>TLS 1.1</strong></h4>

<table border=""1"" style=""margin:auto;width:100%"">
    <tr>
        <th colspan=""2"" style=""text-align:center;width:33%"">Key Exchange</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Encrypted Cipher</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Integrity Assurance</th>
    </tr>

    <tr>
        <td style=""width:23%"">RSA</td>
        <td style=""width:10%"">&radic;</td>
        <td style=""width:23%"">AES GCM</td>
        <td style=""width:10%"">&nbsp;</td>
        <td style=""width:23%"">HMAC");
            WriteLiteral(@"-MD5</td>
        <td style=""width:10%"">&radic;</td>
    </tr>
    <tr>
        <td>DH-RSA</td>
        <td>&radic;</td>
        <td>AES CCM</td>
        <td>&nbsp;</td>
        <td>HMAC-SHA1</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DHE-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>AES CBC</td>
        <td>&nbsp;</td>
        <td>HMAC-SHA256/384</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-RSA</td>
        <td>&radic;</td>
        <td>Camellia GCM</td>
        <td>&nbsp;</td>
        <td>AEAD</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>Camellia CBC</td>
        <td>&nbsp;</td>
        <td>GOST 28147-89 IMIT</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DH-DSS</td>
        <td>&radic;</td>
        <td>ARIA GCM</td>
        <td>&nbsp;</td>
        <td>GOST R34.11-94</td>
        <td>&radic;</td>
    </tr>
    <tr>
");
            WriteLiteral(@"        <td>DHE-DSS(forward secrecy)</td>
        <td>&radic;</td>
        <td>ARIA CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ECDSA</td>
        <td>&radic;</td>
        <td>SEED CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-ECDSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>3DES EDE CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK</td>
        <td>&radic;</td>
        <td>GOST 28147-89 CNT</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK-RSA</td>
        <td>&radic;</td>
        <td>IDEA CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DHE-PSK(forward secrecy)</td>
        <td>&radic;</td>
");
            WriteLiteral(@"        <td>DES CBC (56)</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-PSK(forward secrecy)</td>
        <td>&radic;</td>
        <td>RC2 CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP</td>
        <td>&radic;</td>
        <td>ChaCha20-Poly1305</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-DSS</td>
        <td>&radic;</td>
        <td>RC4 (128)</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-RSA</td>
        <td>&radic;</td>
        <td><i>null</i></td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>Kerberos</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>");
            WriteLiteral(@"&nbsp;</td>
    </tr>
    <tr>
        <td>DH-ANON(insecure)</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ANON(insecure)</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>GOSTR 34.10-94/34.10-2001</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
</table>

<br />
<h4><strong>TLS 1.2</strong></h4>

<table border=""1"" style=""margin:auto;width:100%"">
    <tr>
        <th colspan=""2"" style=""text-align:center;width:33%"">Key Exchange</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Encrypted Cipher</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Integrity Assurance</th>
    </tr>

    <tr>
        <td style=""width:23%"">RSA</td>
        <td ");
            WriteLiteral(@"style=""width:10%"">&radic;</td>
        <td style=""width:23%"">AES GCM</td>
        <td style=""width:10%"">Secure &radic;</td>
        <td style=""width:23%"">HMAC-MD5</td>
        <td style=""width:10%"">&radic;</td>
    </tr>
    <tr>
        <td>DH-RSA</td>
        <td>&radic;</td>
        <td>AES CCM</td>
        <td>Secure &radic;</td>
        <td>HMAC-SHA1</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DHE-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>AES CBC</td>
        <td>&nbsp;</td>
        <td>HMAC-SHA256/384</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>ECDH-RSA</td>
        <td>&radic;</td>
        <td>Camellia GCM</td>
        <td>Secure &radic;</td>
        <td>AEAD</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>ECDH-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>Camellia CBC</td>
        <td>&nbsp;</td>
        <td>GOST 28147-89 IMIT</td>
        <td>&radic;</td>
    </tr>
    <tr>
    ");
            WriteLiteral(@"    <td>DH-DSS</td>
        <td>&radic;</td>
        <td>ARIA GCM</td>
        <td>Secure &radic;</td>
        <td>GOST R34.11-94</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>DHE-DSS(forward secrecy)</td>
        <td>&radic;</td>
        <td>ARIA CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ECDSA</td>
        <td>&radic;</td>
        <td>SEED CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-ECDSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>3DES EDE CBC</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK</td>
        <td>&radic;</td>
        <td>GOST 28147-89 CNT</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK-RSA</td>
        <td>&radic;</td>
        <td>IDE");
            WriteLiteral(@"A CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DHE-PSK(forward secrecy)</td>
        <td>&radic;</td>
        <td>DES CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-PSK(forward secrecy)</td>
        <td>&radic;</td>
        <td>RC2 CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP</td>
        <td>&radic;</td>
        <td>ChaCha20-Poly1305</td>
        <td>Secure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-DSS</td>
        <td>&radic;</td>
        <td>RC4 (128)</td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-RSA</td>
        <td>&radic;</td>
        <td><i>null</i></td>
        <td>Insecure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbs");
            WriteLiteral(@"p;</td>
    </tr>
    <tr>
        <td>Kerberos</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DH-ANON(insecure)</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ANON(insecure)</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>GOSTR 34.10-94/34.10-2001</td>
        <td>&radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
</table>

<br />
<h4><strong>TLS 1.3</strong></h4>

<table border=""1"" style=""margin:auto;width:100%"">
    <tr>
        <th colspan=""2"" style=""text-align:center;width:33%"">Key Exchange</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Encrypted Ciph");
            WriteLiteral(@"er</th>
        <th colspan=""2"" style=""text-align:center;width:33%"">Integrity Assurance</th>
    </tr>

    <tr>
        <td style=""width:23%"">RSA</td>
        <td style=""width:10%"">&nbsp;</td>
        <td style=""width:23%"">AES GCM</td>
        <td style=""width:10%"">Secure &radic;</td>
        <td style=""width:23%"">HMAC-MD5</td>
        <td style=""width:10%"">&nbsp;</td>
    </tr>
    <tr>
        <td>DH-RSA</td>
        <td>&nbsp;</td>
        <td>AES CCM</td>
        <td>Secure &radic;</td>
        <td>HMAC-SHA1</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DHE-RSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>AES CBC</td>
        <td>&nbsp;</td>
        <td>HMAC-SHA256/384</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-RSA</td>
        <td>&nbsp;</td>
        <td>Camellia GCM</td>
        <td>&nbsp;</td>
        <td>AEAD</td>
        <td>&radic;</td>
    </tr>
    <tr>
        <td>ECDH-RSA(forward secrecy)</td>
        <td>&r");
            WriteLiteral(@"adic;</td>
        <td>Camellia CBC</td>
        <td>&nbsp;</td>
        <td>GOST 28147-89 IMIT</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DH-DSS</td>
        <td>&nbsp;</td>
        <td>ARIA GCM</td>
        <td>&nbsp;</td>
        <td>GOST R34.11-94</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DHE-DSS(forward secrecy)</td>
        <td>&nbsp;</td>
        <td>ARIA CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ECDSA</td>
        <td>&nbsp;</td>
        <td>SEED CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-ECDSA(forward secrecy)</td>
        <td>&radic;</td>
        <td>3DES EDE CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK</td>
        <td>&nbsp;</td>
        <td>GOST 28147-89 CNT</td>
        <td>&nbsp;</td>
        <td>&nbs");
            WriteLiteral(@"p;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>PSK-RSA</td>
        <td>&nbsp;</td>
        <td>IDEA CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DHE-PSK(forward secrecy)</td>
        <td>&nbsp;</td>
        <td>DES CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDHE-PSK(forward secrecy)</td>
        <td>&nbsp;</td>
        <td>RC2 CBC</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP</td>
        <td>&nbsp;</td>
        <td>ChaCha20-Poly1305</td>
        <td>Secure &radic;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-DSS</td>
        <td>&nbsp;</td>
        <td>RC4</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>SRP-RSA</td>
        <td>&nbsp;</td>
      ");
            WriteLiteral(@"  <td><i>null</i></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>Kerberos</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>DH-ANON(insecure)</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>ECDH-ANON(insecure)</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>GOSTR 34.10-94/34.10-2001</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
</table>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
