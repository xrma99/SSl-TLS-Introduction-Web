@{
    ViewData["Title"] = "Home Page";
}
<br />




<!--background-image: url('../../images/back3.jpg');-->



<body>
    <div id="tls" class="carousel slide" data-ride="carousel" data-interval="6000">
        <ol class="carousel-indicators">
            <li data-target="#tls" data-slide-to="0" class="active"></li>
            <li data-target="#tls" data-slide-to="1"></li>
            <li data-target="#tls" data-slide-to="2"></li>
            <li data-target="#tls" data-slide-to="3"></li>
        </ol>
        <div class="carousel-inner" role="listbox">
            <div class="item active">
                <img src="~/images/Slide1.JPG" alt="ASP.NET" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        <a href="tls/algorithm" style="color:black">
                            <strong>TLS 1.0</strong>
                        </a>
                    </p>
                    <p9 style="color:#999999">
                        From 1999 to 2020 (expected)
                    </p9>
                </div>
            </div>
            <div class="item">
                <img src="~/images/Slide5.JPG" alt="Visual Studio" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        <a href="tls/algorithm#tls1.1" style="color:black">
                            <strong>TLS 1.1</strong>
                        </a>
                    </p>
                    <p9 style="color:black">
                        From 2006 to 2020 (expected)
                    </p9>
                </div>
            </div>
            <div class="item">
                <img src="~/images/Slide3.JPG" alt="Microsoft Azure" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        <a href="tls/algorithm#tls1.2" style="color:black">
                            <strong>TLS 1.2</strong>
                        </a>
                    </p>
                    <p9 style="color:black;">
                        Since 2008
                    </p9>
                </div>
            </div>
            <div class="item">
                <img src="~/images/Slide4.JPG" alt="Microsoft Azure" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        <a href="tls/algorithm#tls1.3" style="color:black">
                            <strong>TLS 1.3</strong>
                        </a>
                    </p>
                    <p9 style="color:#1F4E79">
                        Since 2018
                    </p9>
                </div>
            </div>
        </div>
        <a class="left carousel-control" href="#tls" role="button" data-slide="prev" style="width:10%;background-color:white">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#tls" role="button" data-slide="next" style="width:10%;background-color:white">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>



    <h3 style="text-align:center"><strong>Transport Layer Security</strong></h3>
    <p>
        Transport Layer Security, and its now-deprecated predecessor, Security Sockets Layer, are cryptographic protocols designed to provide communications security over a computer network.
    </p>
    <p>
        Several versions of the protocols find widespread use in applications such as web browsing, email, instant messaging, and voice over IP (VoIP). Websites can use TLS to secure all communications between their servers and web browsers.
    </p>

    <p>
        The TLS protocol aims primarily to provide privacy and data integrity between two or more communicating computer applications. When secured by TLS, connections between a client and a server should have one or more of the following properties:
        <ul>
            <li>The connection is private because symmetric cryptographt is used to encrypt the data transmitted. The keys for this symmetric encryption are generated uniquely for each connection.</li>
            <li>The identity of the communicating parties can be authenticated using public-key cryptography.</li>
            <li>The connection is reliable because each message transmitted includes a message integrity check using a message authentication code.</li>
        </ul>
        Additional property: Forward secrecy
    </p>
    <p>
        TLS is a proposed Internet Engineering Task Force standard, first defined in 1999, and the current version is TLS 1.3 defined in RFC 8446 (August 2018). TLS builds on the earlier SSL specifications(1994,1995,1996) developed by Netsacpe Communications for adding the HTTPs protocol to their Navigator web browser.
    </p>

    <ul>
        <li><a href="tls">Comparison</a></li>
        <li><a href="tls/attack">Attack</a></li>
    </ul>


    <a href="/Home/Example">&rArr; Example: Visit www.github.com</a>

<h4><strong>About the predecessor, SSL</strong></h4>

<p>
    Netscape developed the original SSL protocols. Version 1.0 was never publicly released because of serious security flaws in the protocol; version 2.0, released in February 1995, contained a number of security flaws which necessitated the design of version 3.0. Released in 1996, SSL version 3.0 represented a complete redesign of the protocol produced by Paul Kocher working with Netscape engineers Phil Karlton and Alan Freier, with a reference implementation by Christopher Allen and Tim Dierks of Consensus Development. TLS are based on SSL 3.0. The 1996 draft of SSL 3.0 was published by IETF as a historical document in RFC 6101.
</p>
    
<p>
    Taher Elgamal, chief scientist at Netscape Communications from 1995 to 1998, has been described as the "father of SSL".
    <ul>
        <li>SSL 2.0 was deprecated in 2011 by RFC 6176.</li>
        <li>In 2014, SSL 3.0 was found to be vulnerable to the POODLE attack that affects all block ciphers in SSL; RC4, the only non-block cipher supported by SSL 3.0, is also feasibly broken as used in SSL 3.0.</li>
        <li>SSL 3.0 was deprecated in June 2015 by RFC 7568.</li>
    </ul>
    
</p>

</body>

